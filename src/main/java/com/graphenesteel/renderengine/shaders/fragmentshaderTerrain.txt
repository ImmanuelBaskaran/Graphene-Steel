#version 400 core

in vec2 pass_textureCoord;

out vec4 out_Color;

uniform sampler2D background;
uniform sampler2D r;
uniform sampler2D g;
uniform sampler2D b;
uniform sampler2D blendMap;


void main(void){
    vec2 tiledCoords = pass_textureCoord * 40.0;
    vec4 blendMapColour = texture(blendMap,pass_textureCoord);

    float backTextureAmount = 1 - (blendMapColour.r + blendMapColour.g+blendMapColour.b);


    vec4 backgroundTextureColour = texture(background,tiledCoords)*backTextureAmount;
    vec4 rColour = texture(r,tiledCoords)*blendMapColour.r;
    vec4 gColour = texture(g,tiledCoords)*blendMapColour.g;
    vec4 bColour = texture(b,tiledCoords)*blendMapColour.b;

    vec4 total = backgroundTextureColour+rColour+gColour+bColour;
    vec4 totalLight = vec4(0.1,0.1,0.1,1);
    out_Color = total*totalLight;
}